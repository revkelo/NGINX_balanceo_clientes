version: "3.8"

services:
  mysql-db-1:
    image: mysql:8
    container_name: mysql-db-1
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: testdb
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    ports:
      - "3307:3306"
    networks:
      - mi-red
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-proot"]
      interval: 10s
      retries: 20
      start_period: 10s

  mysql-db-2:
    image: mysql:8
    container_name: mysql-db-2
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: testdb
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    ports:
      - "3308:3306"
    networks:
      - mi-red
    healthcheck:
      test: ["CMD", "sh", "-c", "mysqladmin ping -h localhost -uroot -proot && mysql -uroot -proot -e 'SELECT 1'"]
      interval: 10s
      retries: 30
      start_period: 20s

  sbclientes1:
    build: ./sbclientes
    container_name: sbclientes1
    restart: always
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-db-1:3306/testdb?useSSL=false&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
    depends_on:
      mysql-db-1:
        condition: service_healthy
    ports:
      - "8080:8080"
    networks:
      - mi-red

  sbclientes2:
    build: ./sbclientes
    container_name: sbclientes2
    restart: always
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-db-2:3306/testdb?useSSL=false&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
    depends_on:
      mysql-db-2:
        condition: service_healthy
    ports:
      - "8081:8080"
    networks:
      - mi-red

  nginx-balanceo-cliente:
    image: nginx
    container_name: nginx-balanceo-cliente
    restart: always
    volumes:
      - "./nginx.conf:/etc/nginx/nginx.conf:ro"
    ports:
      - "8090:80"
    depends_on:
      - sbclientes1
      - sbclientes2
    networks:
      - mi-red

networks:
  mi-red:
    driver: bridge
